events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name smartpicker.au;

        root /usr/share/nginx/html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|eot|ttf|woff|woff2)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Optional: Handle API requests (if Nginx is also proxying APIs)
        # If my frontend makes requests to /api/* and Nginx needs to forward them,
        # you would uncomment and configure this block.
        # However, for Railway, their routing layer usually handles this.
        # Since my backend is on a separate domain (https://api.smartpicker.au),
        # my frontend application will likely make direct requests to that domain,
        # and Nginx on the frontend container does not need to proxy API calls.
        # location /api/ {
        #     proxy_pass https://api.smartpicker.au; # This would be the full URL to my backend
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
    }
}